import express from "express";
import { middlewareLogResponses, middlewareMetricsInc, handleErr } from "./api/middlewareLogResponses.js";
import { healthz } from "./api/healthz.js";
import { validate_chirp } from "./api/validateChirps.js";
import { metrics } from "./api/metrics.js";
import { handlerReset } from "./api/reset.js";
import postgres from "postgres";
import { migrate } from "drizzle-orm/postgres-js/migrator";
import { drizzle } from "drizzle-orm/postgres-js";
import { config } from "./config.js";
import { create_User } from "./api/createUser.js";
const PORT = process.env.PORT ? process.env.PORT : 8080;
const app = express();
const migrationClient = postgres(config.db.url, { max: 1 });
await migrate(drizzle(migrationClient), config.db.migrationConfig);
app.use(express.json());
app.use(middlewareLogResponses);
app.use("/app", middlewareMetricsInc, express.static('./src/app'));
app.get('/app', (req, res) => {
    res.render('index.html');
});
app.get('/api/healthz', healthz);
app.get('/admin/metrics', metrics);
app.post('/admin/reset', handlerReset);
app.post('/api/validate_chirp', validate_chirp);
app.post('/api/users', create_User);
app.use(handleErr);
app.listen(PORT, () => {
    console.log(`Server running at port ${PORT}`);
});
